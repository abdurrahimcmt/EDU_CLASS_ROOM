@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        @* <a id="manage" class="nav-link " asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>*@
        <a id="manage" class="nav-link" href="#">Hello @UserManager.GetUserName(User)</a>
    </li>
    <li class="nav-item">
        @* <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link ">Logout</button>
        </form>*@
        <form id="logoutForm" method="post" class="form-inline" asp-controller="Account" asp-action="LogOff">
            <button type="submit" class="btn nav-link">Logout</button>
        </form>
    </li>
}
else
{
<li class="nav-item">
    <a class="nav-link" id="register" asp-controller="Account" asp-action="Register">Register</a>
    @* <a class="nav-link" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>*@
</li>
<li class="nav-item">
    @* <a class="nav-link" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>*@
    <a class="nav-link" id="login" asp-controller="Account" asp-action="Login">Login</a>
</li>
}
</ul>
